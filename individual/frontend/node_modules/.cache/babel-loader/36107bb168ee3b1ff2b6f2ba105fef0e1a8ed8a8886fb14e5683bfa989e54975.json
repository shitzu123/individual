{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KusumaAdari\\\\Desktop\\\\individual-2\\\\individual\\\\frontend\\\\src\\\\user_component\\\\Users.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Users() {\n  _s();\n  const [usersData, setUsersData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/users');\n      setUsersData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleRegister = async index => {\n    const updatedUsersData = [...usersData];\n    const userData = updatedUsersData[index];\n    if (userData.availableseats > 0 && !userData.registered) {\n      const confirmation = window.confirm('Do you want to register?');\n      if (confirmation) {\n        userData.availableseats -= 1;\n        userData.registered = true;\n        try {\n          //POST request to your server to insert the user data into a separate table\n          await axios.post('http://localhost:3001/register', userData);\n          const updatedUsersData = [...usersData];\n          updatedUsersData[index] = userData;\n          setUsersData(updatedUsersData);\n          console.log('User registered successfully');\n        } catch (error) {\n          console.error('Error registering user:', error);\n        }\n      }\n    }\n  };\n  const filteredUsersData = usersData.filter(uData => uData.domainname.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: filteredUsersData.map((uData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [uData.trainingname, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: uData.domainname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [uData.startdate, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [uData.starttime, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [uData.enddate, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [uData.endtime, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [uData.availableseats, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"btn-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRegister(index),\n            className: `btn text-white`,\n            disabled: uData.availableseats === 0 || uData.registered,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: uData.registered ? /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  backgroundColor: 'green',\n                  padding: '8px',\n                  borderRadius: '3px'\n                },\n                children: \"Registered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  backgroundColor: '#ff6196',\n                  padding: '8px',\n                  borderRadius: '3px'\n                },\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)]\n      }, uData.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this))\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Users, \"9qRcHYdtYJpAPWZWIZ787KiwD5g=\");\n_c = Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Users","_s","usersData","setUsersData","searchQuery","setSearchQuery","fetchData","response","get","data","error","console","handleRegister","index","updatedUsersData","userData","availableseats","registered","confirmation","window","confirm","post","log","filteredUsersData","filter","uData","domainname","toLowerCase","includes","children","map","trainingname","fileName","_jsxFileName","lineNumber","columnNumber","startdate","starttime","enddate","endtime","className","onClick","disabled","style","backgroundColor","padding","borderRadius","id","_c","$RefreshReg$"],"sources":["C:/Users/KusumaAdari/Desktop/individual-2/individual/frontend/src/user_component/Users.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './style.css';\r\n\r\nexport default function Users() {\r\n    const [usersData, setUsersData] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/users');\r\n            setUsersData(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n    const handleRegister = async (index) => {\r\n        const updatedUsersData = [...usersData];\r\n        const userData = updatedUsersData[index];\r\n\r\n        if (userData.availableseats > 0 && !userData.registered) {\r\n            const confirmation = window.confirm('Do you want to register?');\r\n\r\n            if (confirmation) {\r\n                userData.availableseats -= 1;\r\n                userData.registered = true;\r\n                try {\r\n                    //POST request to your server to insert the user data into a separate table\r\n                    await axios.post('http://localhost:3001/register', userData);\r\n\r\n                    \r\n                    const updatedUsersData = [...usersData];\r\n                    updatedUsersData[index] = userData;\r\n                    setUsersData(updatedUsersData);\r\n                    console.log('User registered successfully');\r\n                } catch (error) {\r\n                    console.error('Error registering user:', error);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const filteredUsersData = usersData.filter(uData =>\r\n        uData.domainname.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <>\r\n                {\r\n                    filteredUsersData.map((uData, index) => (\r\n                        <tr key={uData.id}>\r\n                            {/* <td>{uData.id} </td> */}\r\n                            \r\n                            <td>{uData.trainingname} </td>\r\n                            <td>{uData.domainname}</td>\r\n                            <td>{uData.startdate} </td>\r\n                            <td>{uData.starttime} </td>\r\n                            <td>{uData.enddate} </td>\r\n                            <td>{uData.endtime} </td>\r\n                            <td>{uData.availableseats} </td>\r\n                            <td className=\"btn-btn\">\r\n                                <button\r\n                                    onClick={() => handleRegister(index)}\r\n                                    className={`btn text-white`}\r\n                                    disabled={uData.availableseats === 0 || uData.registered}\r\n                                >\r\n                                    <span>\r\n                                        {uData.registered ? (\r\n                                            <span style={{ backgroundColor: 'green', padding: '8px',borderRadius:'3px' }}>\r\n                                                Registered\r\n                                            </span>\r\n                                        ) : (\r\n                                            <span style={{ backgroundColor: '#ff6196', padding: '8px',borderRadius:'3px' }}>\r\n                                        Register\r\n                                    </span>\r\n\r\n                            \r\n                                        )}\r\n                                </span>\r\n                            </button>\r\n                        </td>\r\n\r\n                        </tr>\r\n            ))\r\n                }\r\n\r\n        </>\r\n        </React.Fragment >\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}